#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt plaintext using polyalphabetic substitution cipher
void polyalphabeticEncrypt(char key[], char plaintext[]) {
    int keylen = strlen(key);
    int textlen = strlen(plaintext);
    char ciphertext[textlen];
    int keyIndex = 0;

    for (int i = 0; i < textlen; i++) {
        if (isalpha(plaintext[i])) {
            int shift = tolower(key[keyIndex % keylen]) - 'a';
            char base = isupper(plaintext[i]) ? 'A' : 'a';
            ciphertext[i] = (plaintext[i] - base + shift) % 26 + base;
            keyIndex++;
        } else {
            ciphertext[i] = plaintext[i];
        }
    }

    ciphertext[textlen] = '\0';
    printf("Ciphertext: %s\n", ciphertext);
}

int main() {
    char key[] = "KEY";
    char plaintext[] = "HELLO";

    printf("Key: %s\n", key);
    printf("Plaintext: %s\n", plaintext);

    polyalphabeticEncrypt(key, plaintext);

    return 0;
}
